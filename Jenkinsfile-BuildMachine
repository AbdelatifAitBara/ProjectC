@Library('vault') _


pipeline {
    agent { label 'Building_Machine' }

    environment {
        WORKSPACE = '/home/ubuntu/'
        PROJECT_DIR = '/home/ubuntu/ProjectC'
        PROJECT_FOLDER = 'ProjectC'
        PRODUCT_DOCKER_IMAGE = 'abdelatifaitbara/product'
    }

    stages {

        stage('Clone Git Repository') {
            steps {
                sh "rm -rf ${PROJECT_DIR}"
                sh "git -C ${WORKSPACE} clone -b Dev --recursive git@github.com:AbdelatifAitBara/ProjectC.git"
            }
        }

        stage ('Get Vault Secrets') {
            steps  {
                script {
                withCredentials([[$class: 'VaultTokenCredentialBinding', addrVariable: 'VAULT_ADDR', credentialsId: 'Vault_Credentials', tokenVariable: 'VAULT_TOKEN', vaultAddr: '10.0.3.159:8200']]) {
                    withVault([configuration: configuration, vaultSecrets: secrets]) {
                        sh """
                            echo $env.VAULT_ADDR > hcvault-address.txt
                            echo $env.VAULT_TOKEN > hcvault-token.txt
                        """.stripIndent()
                            }
                }

                }
            }    

        }

    post {
        failure {
            echo "Build failed: ${currentBuild.result}"
        }
        success {
            echo "Build succeeded: ${currentBuild.result}"
        }
    }
}